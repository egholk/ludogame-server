import processing.net.*;

Server ludoServer;
   int val = 0;

//Green array___________________________________________________________
int i;
int j;

int[] Gxvalues = { 
72, 72, 111, 148, 186, 223, 261, 261, 261, 261, 261, 261, 299, 
337, 337, 337, 337, 337, 337, 373, 412, 449, 487, 525, 562, 562, 562, 
525, 487, 449, 412, 373, 337, 337, 337, 337, 337, 337, 299, 261, 
261, 261, 261, 261, 261, 223, 186, 148, 111, 72, 35, 35, 35,
//road
72, 72, 111, 148, 186, 223, 262, 262, 262, 262, 262, 262, 262
};

int[] Gyvalues = { 261, 261, 261, 261, 261, 261, 223, 186, 148, 111, 72, 72, 
72, 111, 148, 186, 223, 261, 261, 261, 261, 261, 261, 299, 337, 
337, 337, 337, 337, 337, 373, 412, 449, 487, 525, 562, 562, 562, 
525, 487, 449, 412, 373, 337, 337, 337, 337, 337, 337, 299, 261,
//road
261, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299
};

//Yellow array___________________________________________________________________________
int k;
int l;

int[] Yxvalues = {
337, 337, 337, 337, 337, 337, 373, 412, 449, 487, 525, 562, 562, 562,
525, 487, 449, 412, 373, 337, 337, 337, 337, 337, 337, 299, 261, 
261, 261, 261, 261, 261, 223, 186, 148, 111, 72, 35, 35, 35,
72, 72, 111, 148, 186, 223, 261, 261, 261, 261, 261, 261, 299, 
//road
337, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299
};
  
int[] Yyvalues = {
72, 111, 148, 186, 223, 261, 261, 261, 261, 261, 261, 299, 337, 
337, 337, 337, 337, 337, 373, 412, 449, 487, 525, 562, 562, 562,
525, 487, 449, 412, 373, 337, 337, 337, 337, 337, 337, 299, 261,
261, 261, 261, 261, 261, 261, 223, 186, 148, 111, 72, 72,
//road
72, 72, 111, 148, 186, 223, 262, 262, 262, 262, 262, 262, 262
};

//Blue array__________________________________________________________________________

int m;
int n;

int[] Bxvalues = {
  525, 487, 449, 412, 373, 337, 337, 337, 337, 337, 337, 299, 261, 
  261, 261, 261, 261, 261, 223, 186, 148, 111, 72, 35, 35, 35,
  72, 72, 111, 148, 186, 223, 261, 261, 261, 261, 261, 261, 299,
  337, 337, 337, 337, 337, 337, 373, 412, 449, 487, 525, 562, 562, 562,
  //road
  525, 525, 487, 449, 412, 373, 335, 335, 335, 335, 335, 335, 335
  };
  
int[] Byvalues = {
  337, 337, 337, 337, 337, 373, 412, 449, 487, 525, 562, 562, 562,
  525, 487, 449, 412, 373, 337, 337, 337, 337, 337, 337, 299, 261,
  261, 261, 261, 261, 261, 261, 223, 186, 148, 111, 72, 72,
  72, 111, 148, 186, 223, 261, 261, 261, 261, 261, 261, 299, 337, 
  //road
  337, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299
  };
  
//Red array__________________________________________________________________________

int o;
int p;

int[] Rxvalues = {
  261, 261, 261, 261, 261, 223, 186, 148, 111, 72, 35, 35, 35,
  72, 72, 111, 148, 186, 223, 261, 261, 261, 261, 261, 261, 299,
  337, 337, 337, 337, 337, 337, 373, 412, 449, 487, 525, 562, 562, 562,
  525, 487, 449, 412, 373, 337, 337, 337, 337, 337, 337, 299, 261,
  //road
  261, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299, 299
  };
  
int[] Ryvalues = {
  525, 487, 449, 412, 373, 337, 337, 337, 337, 337, 337, 299, 261,
  261, 261, 261, 261, 261, 261, 223, 186, 148, 111, 72, 72,
  72, 111, 148, 186, 223, 261, 261, 261, 261, 261, 261, 299, 337,
  337, 337, 337, 337, 337, 373, 412, 449, 487, 525, 562, 562, 562,
  //road
  525, 525, 487, 449, 412, 373, 335, 335, 335, 335, 335, 335, 335
  };



void setup() {
  size(200, 200);
  // Starts a myServer on port 5204
  ludoServer = new Server(this, 5204); 
  //Maybe write in functions here???
}   

void draw() {
  
  //Green___________________________________________________________________
  for ( i=0; i < Gxvalues.length-1; i++) { 
    Gxvalues[i] =  i;
  }
  for ( j=0; j < Gyvalues.length-1; j++) { 
    Gyvalues[j] = j;
  }


//Yellow____________________________________________________________________
  for ( k=0; k < Yxvalues.length-1; k++) { 
    Yxvalues[k] =  k;
  }
  for ( l=0; l < Yyvalues.length-1; l++) { 
    Yyvalues[l] = l;
  }


//Blue_____________________________________________________________________
  for ( m=0; m < Bxvalues.length-1; m++) { 
    Bxvalues[m] =  m;
  }
  for ( n=0; n < Byvalues.length-1; n++) { 
    Byvalues[n] = n;
  }
  
  
//Red_____________________________________________________________________
  for ( o=0; o < Rxvalues.length-1; o++) { 
    Rxvalues[o] =  o;
  }
  for ( p=0; p < Ryvalues.length-1; p++) { 
    Ryvalues[p] = p;
  }
  
}
